{"version":3,"sources":["reducers/createSimpleReducer.js","reducers/types.js","reducers/createEntityReducer.js","utils/createUniqueIndex.js","reducers/createDataViewReducer.js","reducers/createNetworkReducer.js","reducers/rootReducer.js","reducers/multi.js","contexts/StateContext.js","utils/giscloud.js","constants.js","components/MapViewer.js","utils/createViewId.js","actionCreators.js","effects/fetchHistoryEntries.js","components/TaskForm.js","components/HistoryEntry.js","components/HistoryEntries.js","components/SideSheet.js","hooks/useHandleEditStart.js","components/AuthButton.js","components/SettingsMenu.js","components/Home.js","hooks/useHandleSelectionChange.js","hooks/useClearSelection.js","hooks/useToken.js","App.js","serviceWorker.js","index.js"],"names":["createSimpleReducer","_ref","set","initialValue","arguments","length","undefined","state","action","type","payload","reducers_types","treeFeatures","request","success","fail","historyEntries","sideSheetViewId","selections","isEditing","getKey","createNonUniqueIndexById","id","data","Object","values","reduce","accumulation","current","objectSpread","defineProperty","createEntityReducer","_ref2","entities","createDataViewReducer","viewId","meta","fetching","error","ids","map","e","createNetworkReducer","types","combineReducers","byId","views","multi","reducer","network","app","actions","acc","cur","StateContext","createContext","window","CLIENT_ID","MAP_ID","HISTORY_TABLE_NAME","useStyles","makeStyles","mapViewer","height","width","MapViewer","onSelectionChange","viewerRef","token","_useState","useState","_useState2","slicedToArray","viewer","setViewer","classes","useEffect","giscloud","oauth2","v","Viewer","slider","loading","then","select","selectionChange","react_default","a","createElement","className","createViewId","params","illegalValue","find","value","Error","concat","entries","sort","key1","key2","_ref5","_ref6","key","join","createReceive","createRequest","receiveFeature","requestFeature","receiveHistoryEntries","requestHistoryEntries","setSelectionFromViewer","selection","selected","_ref3","featureId","layerId","Number","fetchHistoryEntries","dispatch","treeId","Query","geometry","where","d","ogc_fid","theme","form","display","flexDirection","input","marginTop","spacing","marginLeft","marginRight","button","TaskForm","_useContext","useContext","_useContext2","description","setDescription","_useState3","_useState4","uploading","setUploading","_useState5","_useState6","uploadError","setUploadError","handleDescriptionChange","useCallback","target","handleEditComplete","event","preventDefault","tables","rows","add","tree_id","always","onSubmit","TextField","variant","autoFocus","onChange","required","Button","color","disabled","Typography","HistoryEntry","__created","date","Date","getTime","getTimezoneOffset","setCurrentTimezone","ListItem","ListItemText","primary","secondary","toLocaleString","HistoryEntries","children","view","CircularProgress","assign","defaultProps","drawerPaper","title","SideSheet","drawerChildren","onClose","handleEditStart","useHandleEditStart","getView","LinearProgress","featureData","getFeatureData","Fragment","name","onClick","Drawer","open","paper","AuthButton","signIn","SettingsMenu","anchorEl","setAnchorEl","handleClose","IconButton","currentTarget","Settings_default","Menu","Boolean","keepMounted","MenuItem","signOut","settingsButton","position","right","top","zIndex","appBar","authButton","margin","Home","useRef","handleSelectionChange","feature","features","r","useHandleSelectionChange","clearSelection","clear","useClearSelection","_useToken","setToken","authorize","newToken","useToken","components_MapViewer","components_AuthButton","initialState","rootReducer","createMuiTheme","App","_useReducer","useReducer","_useReducer2","MuiThemeProvider_default","contexts_StateContext","Provider","components_Home","location","hostname","match","ready","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.dd46849a.chunk.js","sourcesContent":["export default function createSimpleReducer({ set }, initialValue = null) {\n  return function reducer(state = initialValue, action) {\n    switch (action.type) {\n      case set:\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n}\n","export default {\n  treeFeatures: {\n    request: 'treeFeaturesRequest',\n    success: 'treeFeaturesSuccess',\n    fail: 'treeFeaturesFail',\n  },\n  historyEntries: {\n    request: 'historyEntriesRequest',\n    success: 'historyEntriesSuccess',\n    fail: 'historyEntriesFail',\n  },\n  sideSheetViewId: {\n    set: 'setSideSheetViewId',\n  },\n  selections: {\n    set: 'setSelections',\n  },\n  isEditing: {\n    set: 'setEditing',\n  },\n};\n","import createNonUniqueIndex from '../utils/createUniqueIndex';\n\n\nconst createNonUniqueIndexById = createNonUniqueIndex(({ id }) => id);\n\nexport default ({ success }) => (state = {}, action) => {\n  switch (action.type) {\n    case success:\n      return {\n        ...state,\n        ...createNonUniqueIndexById(action.payload.entities),\n      };\n    default:\n      return state;\n  }\n};\n","export default function createUniqueIndex(getKey) {\n  return data => Object.values(data).reduce(\n    (accumulation, current) => ({ ...accumulation, [getKey(current)]: current }),\n    {},\n  );\n}\n","export default ({ request, success, fail }) => (state = {}, action) => {\n  switch (action.type) {\n    case request:\n      return {\n        ...state,\n        [action.payload.viewId]: {\n          meta: {\n            fetching: true,\n            error: false,\n          },\n          ids: [],\n        },\n      };\n    case success:\n      return {\n        ...state,\n        [action.payload.viewId]: {\n          meta: {\n            fetching: false,\n            error: false,\n          },\n          ids: action.payload.entities.map(e => e.id),\n        },\n      };\n    case fail:\n      return {\n        ...state,\n        [action.payload.viewId]: {\n          meta: {\n            fetching: false,\n            error: true,\n          },\n          ids: [],\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport createEntityReducer from './createEntityReducer';\nimport createDataViewReducer from './createDataViewReducer';\n\nexport default function createNetworkReducer(types) {\n  return combineReducers({\n    byId: createEntityReducer(types),\n    views: createDataViewReducer(types),\n  });\n}\n","import { combineReducers } from 'redux';\nimport multi from './multi';\nimport createSimpleReducer from './createSimpleReducer';\nimport types from './types';\nimport createNetworkReducer from './createNetworkReducer';\n\nexport default multi(combineReducers({\n  network: combineReducers({\n    treeFeatures: createNetworkReducer(types.treeFeatures),\n    historyEntries: createNetworkReducer(types.historyEntries),\n  }),\n  app: combineReducers({\n    selections: createSimpleReducer(types.selections, []),\n    isEditing: createSimpleReducer(types.isEditing, false),\n  }),\n}));\n","export default function multi(reducer) {\n  return function wrapperReducer(state, actions) {\n    return actions.reduce((acc, cur) => reducer(acc, cur), state);\n  };\n}\n","import { createContext } from 'react';\n\nconst StateContext = createContext();\nexport default StateContext;\n","export default window.giscloud;\n","// Client ID can be generated in GIS Cloud Map Editor -> My Account -> API Access\nexport const CLIENT_ID = '9ada0e4a4183b348d7df';\n\n// Map IDs can be obtained in: http://dev.giscloud.com/examples/auth.html\nexport const MAP_ID = 1082904;\n\nexport const HISTORY_TABLE_NAME = 'giscloud_api_test_history';\n","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nimport giscloud from '../utils/giscloud';\nimport { MAP_ID } from '../constants';\n\nconst useStyles = makeStyles({\n  mapViewer: {\n    height: '100%',\n    width: '100%',\n  },\n});\n\n/**\n * A wrapper around giscloud.Viewer.\n */\nfunction MapViewer({ onSelectionChange, viewerRef, token }) {\n  const [viewer, setViewer] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    const loggedin = giscloud.oauth2.token() != null;\n    if (!loggedin) return;\n\n    const v = new giscloud.Viewer('mapViewer', MAP_ID, { slider: true });\n    setViewer(v);\n    window.viewer = v;\n\n    // eslint-disable-next-line no-param-reassign\n    viewerRef.current = v;\n\n    v.loading.then(() => {\n      v.select(true);\n    });\n  }, [viewerRef, onSelectionChange, token]);\n\n  useEffect(() => {\n    if (viewer == null) return;\n    viewer.loading.then(() => {\n      viewer.selectionChange(onSelectionChange);\n    });\n  }, [onSelectionChange, viewer]);\n  return (\n    <div id=\"mapViewer\" className={classes.mapViewer} />\n  );\n}\n\nMapViewer.propTypes = {\n  onSelectionChange: PropTypes.func.isRequired,\n  viewerRef: PropTypes.shape({ current: PropTypes.any }).isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nexport default MapViewer;\n","export default function createViewId(params) {\n  const illegalValue = Object\n    .values(params)\n    .find(value => typeof value !== 'number' && typeof value !== 'string');\n\n  if (illegalValue !== undefined) {\n    throw new Error(\n      `Only numbers and strings are allowed. Found ${illegalValue} (${typeof illegalValue}).`,\n    );\n  }\n\n  return `{${\n    Object\n      .entries(params)\n      .sort(([key1], [key2]) => {\n        if (key1 < key2) {\n          return -1;\n        }\n        if (key1 > key2) {\n          return 1;\n        }\n        return 0;\n      })\n      .map(([key, value]) => `${key}: ${value}`)\n      .join(', ')\n  }}`;\n}\n","import types from './reducers/types';\n\nfunction createReceive({ success }) {\n  return function receive(viewId, entities) {\n    return {\n      type: success,\n      payload: {\n        viewId,\n        entities,\n      },\n    };\n  };\n}\n\nfunction createRequest({ request }) {\n  return function requestFeature(viewId) {\n    return {\n      type: request,\n      payload: { viewId },\n    };\n  };\n}\n\nexport const receiveFeature = createReceive(types.treeFeatures);\nexport const requestFeature = createRequest(types.treeFeatures);\nexport const receiveHistoryEntries = createReceive(types.historyEntries);\nexport const requestHistoryEntries = createRequest(types.historyEntries);\n\nexport function setSelectionFromViewer(viewerRef) {\n  return {\n    type: types.selections.set,\n    payload:\n    viewerRef.current\n      ? viewerRef.current.selection.selected()\n        .map(({ featureId, layerId }) => ({\n          featureId: Number(featureId), layerId,\n        })) // Convert Number wrappers to primitive numbers.\n      : [],\n  };\n}\nexport function setEditing(isEditing) {\n  return {\n    type: types.isEditing.set,\n    payload: isEditing,\n  };\n}\n","import { requestHistoryEntries, receiveHistoryEntries } from '../actionCreators';\nimport giscloud from '../utils/giscloud';\nimport createViewId from '../utils/createViewId';\nimport { HISTORY_TABLE_NAME } from '../constants';\n\nexport default function fetchHistoryEntries(dispatch, treeId) {\n  const viewId = createViewId({ treeId });\n  dispatch([\n    requestHistoryEntries(viewId),\n  ]);\n  new giscloud.Query(HISTORY_TABLE_NAME, { geometry: false })\n    .where('tree_id', '=', treeId)\n    .find()\n    .then(({ data }) => data.map(d => ({ id: d.ogc_fid, ...d })))\n    .then((entries) => {\n      dispatch([receiveHistoryEntries(viewId, entries)]);\n    });\n}\n","import React, { useState, useCallback, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport StateContext from '../contexts/StateContext';\nimport giscloud from '../utils/giscloud';\nimport { HISTORY_TABLE_NAME } from '../constants';\nimport fetchHistoryEntries from '../effects/fetchHistoryEntries';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  input: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  error: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n}));\n\nexport default function TaskForm() {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(StateContext);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [uploadError, setUploadError] = useState(null);\n  const handleDescriptionChange = useCallback(\n    ({ target: { value } }) => setDescription(value), [setDescription],\n  );\n\n  const treeId = (state.app.selections[0] || {}).featureId;\n  const handleEditComplete = useCallback((event) => {\n    event.preventDefault();\n    setUploading(true);\n    giscloud.tables.rows.add(HISTORY_TABLE_NAME, {\n      data: {\n        tree_id: treeId,\n        description,\n      },\n    })\n      .then(() => {\n        setDescription('');\n      })\n      .fail((e) => {\n        setUploadError(e);\n      })\n      .always(() => {\n        setUploading(false);\n      })\n      .then(() => {\n        fetchHistoryEntries(dispatch, treeId);\n      });\n  }, [treeId, description, dispatch]);\n\n  return (\n    <form onSubmit={handleEditComplete} className={classes.form}>\n      <TextField\n        variant=\"outlined\"\n        autoFocus\n        className={classes.input}\n        value={description}\n        onChange={handleDescriptionChange}\n        required\n      />\n      <Button color=\"primary\" variant=\"contained\" className={classes.button} disabled={uploading} type=\"submit\">\n        {uploading ? '送信中' : '送信'}\n      </Button>\n      {uploadError\n        ? <Typography color=\"error\" className={classes.error}>送信に失敗しました。</Typography>\n        : null\n      }\n    </form>\n  );\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nfunction setCurrentTimezone(date) {\n  return new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n}\n\nexport default function HistoryEntry({ description, __created }) {\n  const date = setCurrentTimezone(new Date(__created));\n  return (\n    <ListItem>\n      <ListItemText\n        primary={description}\n        secondary={date.toLocaleString()}\n      />\n    </ListItem>\n  );\n}\n\nHistoryEntry.propTypes = {\n  description: propTypes.string.isRequired,\n  __created: propTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport StateContext from '../contexts/StateContext';\nimport createViewId from '../utils/createViewId';\nimport HistoryEntry from './HistoryEntry';\n\nexport default function HistoryEntries({ treeId, className }) {\n  const [state] = useContext(StateContext);\n  const viewId = createViewId({ treeId });\n  const view = state.network.historyEntries.views[viewId];\n  let children;\n  if (view == null) {\n    children = null;\n  } else if (view.meta.fetching) {\n    children = <CircularProgress />;\n  } else if (view.meta.error) {\n    children = 'error';\n  } else {\n    const entries = view.ids.map(id => state.network.historyEntries.byId[id]);\n    children = entries.map(e => <HistoryEntry {...e} key={e.id} />);\n  }\n  return (\n    <div className={className}>{children}</div>\n  );\n}\n\nHistoryEntries.defaultProps = {\n  className: null,\n};\n\nHistoryEntries.propTypes = {\n  treeId: propTypes.number.isRequired,\n  className: propTypes.string,\n};\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nimport { Typography } from '@material-ui/core';\nimport createViewId from '../utils/createViewId';\nimport useHandleEditStart from '../hooks/useHandleEditStart';\nimport StateContext from '../contexts/StateContext';\nimport TaskForm from './TaskForm';\nimport HistoryEntries from './HistoryEntries';\n\nfunction getView(state) {\n  if (state.app.selections[0] == null) { return null; }\n  const viewId = createViewId({ id: state.app.selections[0].featureId });\n  const view = state.network.treeFeatures.views[viewId];\n  return view;\n}\nfunction getFeatureData(state, view) {\n  const featureId = view.ids[0];\n  const feature = state.network.treeFeatures.byId[featureId];\n  return feature.data;\n}\nconst useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    width: 400,\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  historyEntries: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function SideSheet({ onClose }) {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(StateContext);\n  const handleEditStart = useHandleEditStart(dispatch);\n  const view = getView(state);\n  let drawerChildren;\n  if (view == null) {\n    drawerChildren = null;\n  } else if (view.meta.fetching) {\n    drawerChildren = <LinearProgress />;\n  } else if (view.meta.error) {\n    drawerChildren = 'fetching';\n  } else {\n    const featureData = getFeatureData(state, view);\n    drawerChildren = (\n      <>\n        <Typography variant=\"h5\" className={classes.title}>\n          {featureData.name}\n        </Typography>\n        {state.app.isEditing\n          ? (\n            <TaskForm />\n          )\n          : (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={handleEditStart}\n            >\n              作業を記録\n            </Button>\n          )\n        }\n        <HistoryEntries treeId={view.ids[0]} className={classes.historyEntries} />\n      </>\n    );\n  }\n  return (\n    <Drawer open={view != null} onClose={onClose} classes={{ paper: classes.drawerPaper }}>\n      {drawerChildren}\n    </Drawer>\n  );\n}\nSideSheet.propTypes = {\n  onClose: propTypes.func.isRequired,\n};\n","import { useCallback } from 'react';\nimport { setEditing } from '../actionCreators';\n\nexport default function useHandleEditStart(dispatch) {\n  return useCallback(() => {\n    dispatch([\n      setEditing(true),\n    ]);\n  }, [dispatch]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport giscloud from '../utils/giscloud';\n\n\nfunction AuthButton({ className }) {\n  function handleClick() {\n    giscloud.oauth2.signIn();\n  }\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleClick} className={className}>\n      ログイン\n    </Button>\n  );\n}\n\nAuthButton.defaultProps = {\n  className: null,\n};\n\nAuthButton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AuthButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Settings from '@material-ui/icons/Settings';\nimport giscloud from '../utils/giscloud';\n\nexport default function SettingsMenu({ className }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  function handleOpen({ currentTarget }) {\n    setAnchorEl(currentTarget);\n  }\n  function handleSignOut() {\n    handleClose();\n    giscloud.oauth2.signOut();\n  }\n  return (\n    <>\n      <IconButton className={className} onClick={handleOpen}>\n        <Settings />\n      </IconButton>\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose} keepMounted>\n        <MenuItem onClick={handleSignOut}>ログアウト</MenuItem>\n      </Menu>\n    </>\n  );\n}\nSettingsMenu.propTypes = {\n  className: PropTypes.string.isRequired,\n};\n","import React, { useRef } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nimport MapViewer from './MapViewer';\nimport SideSheet from './SideSheet';\nimport useHandleSelectionChange from '../hooks/useHandleSelectionChange';\nimport useClearSelection from '../hooks/useClearSelection';\nimport AuthButton from './AuthButton';\nimport SettingsMenu from './SettingsMenu';\nimport useToken from '../hooks/useToken';\n\nconst useStyles = makeStyles(theme => ({\n  settingsButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    zIndex: theme.zIndex.appBar,\n  },\n  authButton: {\n    margin: 'auto',\n    display: 'block',\n    top: '50%',\n  },\n}));\n\nfunction Home({ dispatch }) {\n  const viewerRef = useRef(null);\n  const handleSelectionChange = useHandleSelectionChange(dispatch, viewerRef);\n  const clearSelection = useClearSelection(viewerRef);\n  const classes = useStyles();\n  const [token] = useToken();\n  return (\n    <>\n      {\n        token\n          ? (\n            <>\n              <SettingsMenu className={classes.settingsButton} />\n              <SideSheet onClose={clearSelection} />\n              <MapViewer\n                onSelectionChange={handleSelectionChange}\n                viewerRef={viewerRef}\n                token={token}\n              />\n            </>\n          )\n          : <AuthButton className={classes.authButton} />\n      }\n    </>\n  );\n}\n\nHome.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import { useCallback } from 'react';\nimport giscloud from '../utils/giscloud';\nimport { setSelectionFromViewer, requestFeature, receiveFeature } from '../actionCreators';\nimport createViewId from '../utils/createViewId';\nimport fetchHistoryEntries from '../effects/fetchHistoryEntries';\n\nexport default function useHandleSelectionChange(dispatch, viewerRef) {\n  return useCallback((event) => {\n    dispatch([\n      setSelectionFromViewer(viewerRef),\n    ]);\n    if (event.action !== 'add') {\n      return;\n    }\n    const { feature: { featureId } } = event;\n    const viewId = createViewId({ id: featureId });\n    dispatch([\n      requestFeature(viewId),\n    ]);\n    giscloud.features.byId(event.feature.layerId, event.feature.featureId).then((r) => {\n      dispatch([receiveFeature(viewId, [r])]);\n    });\n\n    fetchHistoryEntries(dispatch, featureId);\n  }, [dispatch, viewerRef]);\n}\n","import { useCallback } from 'react';\n\nexport default function useClearSelection(viewerRef) {\n  return useCallback(() => {\n    if (viewerRef.current == null) {\n      return;\n    }\n    viewerRef.current.selection.clear();\n  }, [viewerRef]);\n}\n","import { useEffect, useState } from 'react';\nimport giscloud from '../utils/giscloud';\nimport { CLIENT_ID } from '../constants';\n\nexport default function useToken() {\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    giscloud.oauth2.authorize(CLIENT_ID, () => {\n      // It looks like the callback passed to giscloud.oauth2.authorize()\n      // is fired every time the authorization status changes\n      // (i.e. when loaded, when logged in, when logged out),\n      // which is not documented in the GIS Cloud JS API reference.\n      const newToken = giscloud.oauth2.token();\n      if (token !== newToken) {\n        setToken(newToken);\n      }\n    });\n  }, [token]);\n  return [token];\n}\n","import React, { useReducer } from 'react';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport rootReducer from './reducers/rootReducer';\nimport StateContext from './contexts/StateContext';\nimport Home from './components/Home';\n\nconst initialState = rootReducer(undefined, [{ type: null }]);\n\nconst theme = createMuiTheme({});\n\nfunction App() {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  return (\n    <MuiThemeProvider theme={theme}>\n      <StateContext.Provider value={[state, dispatch]}>\n        <Home dispatch={dispatch} />\n      </StateContext.Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport giscloud from './utils/giscloud';\n\n// These can be obtained from GIS Cloud Map Editor -> My Account -> API Access\n\ngiscloud.ready(() => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}